.. _api-full-config:


Config file and command line options
====================================

The JupyterLab Server can be run with a variety of command line arguments.
A list of available options can be found below in the :ref:`options section
<options>`.

Defaults for these options can also be set by creating a file named
``jupyter_jupyterlab_server_config.py`` in your Jupyter folder. The Jupyter
folder is in your home directory, ``~/.jupyter``.

To create a ``jupyter_jupyterlab_server_config.py`` file, with all the defaults
commented out, you can use the following command line::

  $ python -m jupyterlab_server --generate-config


.. _options:

Options
-------

This list of options can be generated by running the following and hitting
enter::

  $ python -m jupyterlab_server --help-all




Application.log_datefmt : Unicode
    Default: ``'%Y-%m-%d %H:%M:%S'``

    The date format used by logging formatters for %(asctime)s

Application.log_format : Unicode
    Default: ``'[%(name)s]%(highlevel)s %(message)s'``

    The Logging format template

Application.log_level : any of ``0``|``10``|``20``|``30``|``40``|``50``|``'DEBUG'``|``'INFO'``|``'WARN'``|``'ERROR'``|``'CRITICAL'``
    Default: ``30``

    Set the log level by value or name.

Application.show_config : Bool
    Default: ``False``

    Instead of starting the Application, dump configuration to stdout

Application.show_config_json : Bool
    Default: ``False``

    Instead of starting the Application, dump configuration to stdout (as JSON)

JupyterApp.answer_yes : Bool
    Default: ``False``

    Answer yes to any prompts.

JupyterApp.config_file : Unicode
    Default: ``''``

    Full path of a config file.

JupyterApp.config_file_name : Unicode
    Default: ``''``

    Specify a config file to load.

JupyterApp.generate_config : Bool
    Default: ``False``

    Generate default config file.

JupyterApp.log_datefmt : Unicode
    Default: ``'%Y-%m-%d %H:%M:%S'``

    The date format used by logging formatters for %(asctime)s

JupyterApp.log_format : Unicode
    Default: ``'[%(name)s]%(highlevel)s %(message)s'``

    The Logging format template

JupyterApp.log_level : any of ``0``|``10``|``20``|``30``|``40``|``50``|``'DEBUG'``|``'INFO'``|``'WARN'``|``'ERROR'``|``'CRITICAL'``
    Default: ``30``

    Set the log level by value or name.

JupyterApp.show_config : Bool
    Default: ``False``

    Instead of starting the Application, dump configuration to stdout

JupyterApp.show_config_json : Bool
    Default: ``False``

    Instead of starting the Application, dump configuration to stdout (as JSON)

ExtensionApp.answer_yes : Bool
    Default: ``False``

    Answer yes to any prompts.

ExtensionApp.config_file : Unicode
    Default: ``''``

    Full path of a config file.

ExtensionApp.config_file_name : Unicode
    Default: ``''``

    Specify a config file to load.

ExtensionApp.default_url : Unicode
    Default: ``''``

    No description

ExtensionApp.generate_config : Bool
    Default: ``False``

    Generate default config file.

ExtensionApp.handlers : List
    Default: ``[]``

    Handlers appended to the server.

ExtensionApp.log_datefmt : Unicode
    Default: ``'%Y-%m-%d %H:%M:%S'``

    The date format used by logging formatters for %(asctime)s

ExtensionApp.log_format : Unicode
    Default: ``'[%(name)s]%(highlevel)s %(message)s'``

    The Logging format template

ExtensionApp.log_level : any of ``0``|``10``|``20``|``30``|``40``|``50``|``'DEBUG'``|``'INFO'``|``'WARN'``|``'ERROR'``|``'CRITICAL'``
    Default: ``30``

    Set the log level by value or name.

ExtensionApp.open_browser : Bool
    Default: ``False``

    Whether to open in a browser after starting.
    The specific browser used is platform dependent and
    determined by the python standard library `webbrowser`
    module, unless it is overridden using the --browser
    (ServerApp.browser) configuration option.


ExtensionApp.settings : Dict
    Default: ``{}``

    Settings that will passed to the server.

ExtensionApp.show_config : Bool
    Default: ``False``

    Instead of starting the Application, dump configuration to stdout

ExtensionApp.show_config_json : Bool
    Default: ``False``

    Instead of starting the Application, dump configuration to stdout (as JSON)

ExtensionApp.static_paths : List
    Default: ``[]``

    paths to search for serving static files.
    
    This allows adding javascript/css to be available from the notebook server machine,
    or overriding individual files in the IPython


ExtensionApp.static_url_prefix : Unicode
    Default: ``''``

    Url where the static assets for the extension are served.

ExtensionApp.template_paths : List
    Default: ``[]``

    Paths to search for serving jinja templates.
    
    Can be used to override templates from notebook.templates.

LabServerApp.allowed_extensions_uris : Unicode
    Default: ``''``

    
    "A list of comma-separated URIs to get the allowed extensions list
    
    .. versionchanged:: 2.0.0
        `LabServerApp.whitetlist_uris` renamed to `allowed_extensions_uris`


LabServerApp.answer_yes : Bool
    Default: ``False``

    Answer yes to any prompts.

LabServerApp.app_settings_dir : Unicode
    Default: ``''``

    The application settings directory.

LabServerApp.app_url : Unicode
    Default: ``'/lab'``

    The url path for the application.

LabServerApp.blacklist_uris : Unicode
    Default: ``''``

    Deprecated, use `LabServerApp.blocked_extensions_uris`

LabServerApp.blocked_extensions_uris : Unicode
    Default: ``''``

    
    A list of comma-separated URIs to get the blocked extensions list
    
    .. versionchanged:: 2.0.0
        `LabServerApp.blacklist_uris` renamed to `blocked_extensions_uris`


LabServerApp.cache_files : Bool
    Default: ``True``

    Whether to cache files on the server. This should be `True` except in dev mode.

LabServerApp.config_file : Unicode
    Default: ``''``

    Full path of a config file.

LabServerApp.config_file_name : Unicode
    Default: ``''``

    Specify a config file to load.

LabServerApp.extra_labextensions_path : List
    Default: ``[]``

    Extra paths to look for federated JupyterLab extensions

LabServerApp.generate_config : Bool
    Default: ``False``

    Generate default config file.

LabServerApp.handlers : List
    Default: ``[]``

    Handlers appended to the server.

LabServerApp.jinja2_options : Dict
    Default: ``{}``

    Options to pass to the jinja2 environment for this


LabServerApp.labextensions_path : List
    Default: ``[]``

    The standard paths to look in for federated JupyterLab extensions

LabServerApp.labextensions_url : Unicode
    Default: ``''``

    The url for federated JupyterLab extensions

LabServerApp.listings_refresh_seconds : Int
    Default: ``3600``

    The interval delay in seconds to refresh the lists

LabServerApp.listings_request_options : Dict
    Default: ``{}``

    The optional kwargs to use for the listings HTTP requests             as described on https://2.python-requests.org/en/v2.7.0/api/#requests.request

LabServerApp.listings_url : Unicode
    Default: ``''``

    The listings url.

LabServerApp.log_datefmt : Unicode
    Default: ``'%Y-%m-%d %H:%M:%S'``

    The date format used by logging formatters for %(asctime)s

LabServerApp.log_format : Unicode
    Default: ``'[%(name)s]%(highlevel)s %(message)s'``

    The Logging format template

LabServerApp.log_level : any of ``0``|``10``|``20``|``30``|``40``|``50``|``'DEBUG'``|``'INFO'``|``'WARN'``|``'ERROR'``|``'CRITICAL'``
    Default: ``30``

    Set the log level by value or name.

LabServerApp.open_browser : Bool
    Default: ``False``

    Whether to open in a browser after starting.
    The specific browser used is platform dependent and
    determined by the python standard library `webbrowser`
    module, unless it is overridden using the --browser
    (ServerApp.browser) configuration option.


LabServerApp.schemas_dir : Unicode
    Default: ``''``

    The optional location of the settings schemas directory. If given, a handler will be added for settings.

LabServerApp.settings : Dict
    Default: ``{}``

    Settings that will passed to the server.

LabServerApp.settings_url : Unicode
    Default: ``''``

    The url path of the settings handler.

LabServerApp.show_config : Bool
    Default: ``False``

    Instead of starting the Application, dump configuration to stdout

LabServerApp.show_config_json : Bool
    Default: ``False``

    Instead of starting the Application, dump configuration to stdout (as JSON)

LabServerApp.static_dir : Unicode
    Default: ``''``

    The optional location of local static files. If given, a static file handler will be added.

LabServerApp.static_paths : List
    Default: ``[]``

    paths to search for serving static files.
    
    This allows adding javascript/css to be available from the notebook server machine,
    or overriding individual files in the IPython


LabServerApp.static_url_prefix : Unicode
    Default: ``''``

    Url where the static assets for the extension are served.

LabServerApp.template_paths : List
    Default: ``[]``

    Paths to search for serving jinja templates.
    
    Can be used to override templates from notebook.templates.

LabServerApp.templates_dir : Unicode
    Default: ``''``

    The application templates directory.

LabServerApp.themes_dir : Unicode
    Default: ``''``

    The optional location of the themes directory. If given, a handler will be added for themes.

LabServerApp.themes_url : Unicode
    Default: ``''``

    The theme url.

LabServerApp.translations_api_url : Unicode
    Default: ``''``

    The url path of the translations handler.

LabServerApp.tree_url : Unicode
    Default: ``''``

    The url path of the tree handler.

LabServerApp.user_settings_dir : Unicode
    Default: ``''``

    The optional location of the user settings directory.

LabServerApp.whitelist_uris : Unicode
    Default: ``''``

    Deprecated, use `LabServerApp.allowed_extensions_uris`

LabServerApp.workspaces_api_url : Unicode
    Default: ``''``

    The url path of the workspaces API.

LabServerApp.workspaces_dir : Unicode
    Default: ``''``

    The optional location of the saved workspaces directory. If given, a handler will be added for workspaces.

ServerApp.allow_credentials : Bool
    Default: ``False``

    Set the Access-Control-Allow-Credentials: true header

ServerApp.allow_origin : Unicode
    Default: ``''``

    Set the Access-Control-Allow-Origin header
    
    Use '*' to allow any origin to access your server.
    
    Takes precedence over allow_origin_pat.


ServerApp.allow_origin_pat : Unicode
    Default: ``''``

    Use a regular expression for the Access-Control-Allow-Origin header
    
    Requests from an origin matching the expression will get replies with:
    
        Access-Control-Allow-Origin: origin
    
    where `origin` is the origin of the request.
    
    Ignored if allow_origin is set.


ServerApp.allow_password_change : Bool
    Default: ``True``

    Allow password to be changed at login for the Jupyter server.
    
    While loggin in with a token, the Jupyter server UI will give the opportunity to
    the user to enter a new password at the same time that will replace
    the token login mechanism.
    
    This can be set to false to prevent changing password from the UI/API.


ServerApp.allow_remote_access : Bool
    Default: ``False``

    Allow requests where the Host header doesn't point to a local server
    
    By default, requests get a 403 forbidden response if the 'Host' header
    shows that the browser thinks it's on a non-local domain.
    Setting this option to True disables this check.
    
    This protects against 'DNS rebinding' attacks, where a remote web server
    serves you a page and then changes its DNS to send later requests to a
    local IP, bypassing same-origin checks.
    
    Local IP addresses (such as 127.0.0.1 and ::1) are allowed as local,
    along with hostnames configured in local_hostnames.


ServerApp.allow_root : Bool
    Default: ``False``

    Whether to allow the user to run the server as root.

ServerApp.answer_yes : Bool
    Default: ``False``

    Answer yes to any prompts.

ServerApp.authenticate_prometheus : Bool
    Default: ``True``

    "
    Require authentication to access prometheus metrics.


ServerApp.autoreload : Bool
    Default: ``False``

    Reload the webapp when changes are made to any Python src files.

ServerApp.base_url : Unicode
    Default: ``'/'``

    The base URL for the Jupyter server.
    
    Leading and trailing slashes can be omitted,
    and will automatically be added.


ServerApp.browser : Unicode
    Default: ``''``

    Specify what command to use to invoke a web
    browser when starting the server. If not specified, the
    default browser will be determined by the `webbrowser`
    standard library module, which allows setting of the
    BROWSER environment variable to override it.


ServerApp.certfile : Unicode
    Default: ``''``

    The full path to an SSL/TLS certificate file.

ServerApp.client_ca : Unicode
    Default: ``''``

    The full path to a certificate authority certificate for SSL/TLS client authentication.

ServerApp.config_file : Unicode
    Default: ``''``

    Full path of a config file.

ServerApp.config_file_name : Unicode
    Default: ``''``

    Specify a config file to load.

ServerApp.config_manager_class : Type
    Default: ``'jupyter_server.services.config.manager.ConfigManager'``

    The config manager class to use

ServerApp.contents_manager_class : TypeFromClasses
    Default: ``'jupyter_server.services.contents.largefilemanager.LargeFileM...``

    The content manager class to use.

ServerApp.cookie_options : Dict
    Default: ``{}``

    Extra keyword arguments to pass to `set_secure_cookie`. See tornado's set_secure_cookie docs for details.

ServerApp.cookie_secret : Bytes
    Default: ``b''``

    The random bytes used to secure cookies.
    By default this is a new random number every time you start the server.
    Set it to a value in a config file to enable logins to persist across server sessions.
    
    Note: Cookie secrets should be kept private, do not share config files with
    cookie_secret stored in plaintext (you can read the value from a file).


ServerApp.cookie_secret_file : Unicode
    Default: ``''``

    The file where the cookie secret is stored.

ServerApp.custom_display_url : Unicode
    Default: ``''``

    Override URL shown to users.
    
    Replace actual URL, including protocol, address, port and base URL,
    with the given value when displaying URL to the users. Do not change
    the actual connection URL. If authentication token is enabled, the
    token is added to the custom URL automatically.
    
    This option is intended to be used when the URL to display to the user
    cannot be determined reliably by the Jupyter server (proxified
    or containerized setups for example).

ServerApp.default_url : Unicode
    Default: ``'/'``

    The default URL to redirect to from `/`

ServerApp.disable_check_xsrf : Bool
    Default: ``False``

    Disable cross-site-request-forgery protection
    
    Jupyter notebook 4.3.1 introduces protection from cross-site request forgeries,
    requiring API requests to either:
    
    - originate from pages served by this server (validated with XSRF cookie and token), or
    - authenticate with a token
    
    Some anonymous compute resources still desire the ability to run code,
    completely without authentication.
    These services can disable all authentication and security checks,
    with the full knowledge of what that implies.


ServerApp.extra_services : List
    Default: ``[]``

    handlers that should be loaded at higher priority than the default services

ServerApp.extra_static_paths : List
    Default: ``[]``

    Extra paths to search for serving static files.
    
    This allows adding javascript/css to be available from the Jupyter server machine,
    or overriding individual files in the IPython

ServerApp.extra_template_paths : List
    Default: ``[]``

    Extra paths to search for serving jinja templates.
    
    Can be used to override templates from jupyter_server.templates.

ServerApp.file_to_run : Unicode
    Default: ``''``

    Open the named file when the application is launched.

ServerApp.file_url_prefix : Unicode
    Default: ``'notebooks'``

    The URL prefix where files are opened directly.

ServerApp.generate_config : Bool
    Default: ``False``

    Generate default config file.

ServerApp.get_secure_cookie_kwargs : Dict
    Default: ``{}``

    Extra keyword arguments to pass to `get_secure_cookie`. See tornado's get_secure_cookie docs for details.

ServerApp.iopub_data_rate_limit : Float
    Default: ``1000000``

    (bytes/sec)
    Maximum rate at which stream output can be sent on iopub before they are
    limited.

ServerApp.iopub_msg_rate_limit : Float
    Default: ``1000``

    (msgs/sec)
    Maximum rate at which messages can be sent on iopub before they are
    limited.

ServerApp.ip : Unicode
    Default: ``'localhost'``

    The IP address the Jupyter server will listen on.

ServerApp.jinja_environment_options : Dict
    Default: ``{}``

    Supply extra arguments that will be passed to Jinja environment.

ServerApp.jinja_template_vars : Dict
    Default: ``{}``

    Extra variables to supply to jinja templates when rendering.

ServerApp.jpserver_extensions : Dict
    Default: ``{}``

    Dict of Python modules to load as notebook server extensions.Entry values can be used to enable and disable the loading ofthe extensions. The extensions will be loaded in alphabetical order.

ServerApp.kernel_manager_class : Type
    Default: ``'jupyter_server.services.kernels.kernelmanager.AsyncMappingKe...``

    The kernel manager class to use.

ServerApp.kernel_spec_manager_class : Type
    Default: ``'jupyter_client.kernelspec.KernelSpecManager'``

    
    The kernel spec manager class to use. Should be a subclass
    of `jupyter_client.kernelspec.KernelSpecManager`.
    
    The Api of KernelSpecManager is provisional and might change
    without warning between this version of Jupyter and the next stable one.


ServerApp.keyfile : Unicode
    Default: ``''``

    The full path to a private key file for usage with SSL/TLS.

ServerApp.local_hostnames : List
    Default: ``['localhost']``

    Hostnames to allow as local when allow_remote_access is False.
    
    Local IP addresses (such as 127.0.0.1 and ::1) are automatically accepted
    as local as well.


ServerApp.log_datefmt : Unicode
    Default: ``'%Y-%m-%d %H:%M:%S'``

    The date format used by logging formatters for %(asctime)s

ServerApp.log_format : Unicode
    Default: ``'[%(name)s]%(highlevel)s %(message)s'``

    The Logging format template

ServerApp.log_level : any of ``0``|``10``|``20``|``30``|``40``|``50``|``'DEBUG'``|``'INFO'``|``'WARN'``|``'ERROR'``|``'CRITICAL'``
    Default: ``30``

    Set the log level by value or name.

ServerApp.login_handler_class : Type
    Default: ``'jupyter_server.auth.login.LoginHandler'``

    The login handler class to use.

ServerApp.logout_handler_class : Type
    Default: ``'jupyter_server.auth.logout.LogoutHandler'``

    The logout handler class to use.

ServerApp.max_body_size : Int
    Default: ``536870912``

    
    Sets the maximum allowed size of the client request body, specified in
    the Content-Length request header field. If the size in a request
    exceeds the configured value, a malformed HTTP message is returned to
    the client.
    
    Note: max_body_size is applied even in streaming mode.


ServerApp.max_buffer_size : Int
    Default: ``536870912``

    
    Gets or sets the maximum amount of memory, in bytes, that is allocated
    for use by the buffer manager.


ServerApp.min_open_files_limit : Int
    Default: ``0``

    
    Gets or sets a lower bound on the open file handles process resource
    limit. This may need to be increased if you run into an
    OSError: [Errno 24] Too many open files.
    This is not applicable when running on Windows.


ServerApp.notebook_dir : Unicode
    Default: ``''``

    DEPRECATED, use root_dir.

ServerApp.open_browser : Bool
    Default: ``False``

    Whether to open in a browser after starting.
    The specific browser used is platform dependent and
    determined by the python standard library `webbrowser`
    module, unless it is overridden using the --browser
    (ServerApp.browser) configuration option.


ServerApp.password : Unicode
    Default: ``''``

    Hashed password to use for web authentication.
    
    To generate, type in a python/IPython shell:
    
      from jupyter_server.auth import passwd; passwd()
    
    The string should be of the form type:salt:hashed-password.


ServerApp.password_required : Bool
    Default: ``False``

    Forces users to use a password for the Jupyter server.
    This is useful in a multi user environment, for instance when
    everybody in the LAN can access each other's machine through ssh.
    
    In such a case, serving on localhost is not secure since
    any user can connect to the Jupyter server via ssh.
    


ServerApp.port : Int
    Default: ``8888``

    The port the Jupyter server will listen on.

ServerApp.port_retries : Int
    Default: ``50``

    The number of additional ports to try if the specified port is not available.

ServerApp.pylab : Unicode
    Default: ``'disabled'``

    
    DISABLED: use %pylab or %matplotlib in the notebook to enable matplotlib.


ServerApp.quit_button : Bool
    Default: ``True``

    If True, display controls to shut down the Jupyter server, such as menu items or buttons.

ServerApp.rate_limit_window : Float
    Default: ``3``

    (sec) Time window used to
    check the message and data rate limits.

ServerApp.reraise_server_extension_failures : Bool
    Default: ``False``

    Reraise exceptions encountered loading server extensions?

ServerApp.root_dir : Unicode
    Default: ``''``

    The directory to use for notebooks and kernels.

ServerApp.session_manager_class : Type
    Default: ``'jupyter_server.services.sessions.sessionmanager.SessionManager'``

    The session manager class to use.

ServerApp.show_config : Bool
    Default: ``False``

    Instead of starting the Application, dump configuration to stdout

ServerApp.show_config_json : Bool
    Default: ``False``

    Instead of starting the Application, dump configuration to stdout (as JSON)

ServerApp.shutdown_no_activity_timeout : Int
    Default: ``0``

    Shut down the server after N seconds with no kernels or terminals running and no activity. This can be used together with culling idle kernels (MappingKernelManager.cull_idle_timeout) to shutdown the Jupyter server when it's not in use. This is not precisely timed: it may shut down up to a minute later. 0 (the default) disables this automatic shutdown.

ServerApp.ssl_options : Dict
    Default: ``{}``

    Supply SSL options for the tornado HTTPServer.
    See the tornado docs for details.

ServerApp.terminado_settings : Dict
    Default: ``{}``

    Supply overrides for terminado. Currently only supports "shell_command".

ServerApp.terminals_enabled : Bool
    Default: ``True``

    Set to False to disable terminals.
    
    This does *not* make the server more secure by itself.
    Anything the user can in a terminal, they can also do in a notebook.
    
    Terminals may also be automatically disabled if the terminado package
    is not available.


ServerApp.token : Unicode
    Default: ``'<generated>'``

    Token used for authenticating first-time connections to the server.
    
    When no password is enabled,
    the default is to generate a new, random token.
    
    Setting to an empty string disables authentication altogether, which is NOT RECOMMENDED.


ServerApp.tornado_settings : Dict
    Default: ``{}``

    Supply overrides for the tornado.web.Application that the Jupyter server uses.

ServerApp.trust_xheaders : Bool
    Default: ``False``

    Whether to trust or not X-Scheme/X-Forwarded-Proto and X-Real-Ip/X-Forwarded-For headerssent by the upstream reverse proxy. Necessary if the proxy handles SSL

ServerApp.use_redirect_file : Bool
    Default: ``True``

    Disable launching browser by redirect file
    For versions of notebook > 5.7.2, a security feature measure was added that
    prevented the authentication token used to launch the browser from being visible.
    This feature makes it difficult for other users on a multi-user system from
    running code in your Jupyter session as you.
    However, some environments (like Windows Subsystem for Linux (WSL) and Chromebooks),
    launching a browser using a redirect file can lead the browser failing to load.
    This is because of the difference in file structures/paths between the runtime and
    the browser.
    
    Disabling this setting to False will disable this behavior, allowing the browser
    to launch by using a URL and visible token (as before).


ServerApp.webbrowser_open_new : Int
    Default: ``2``

    Specify where to open the server on startup. This is the
    `new` argument passed to the standard library method `webbrowser.open`.
    The behaviour is not guaranteed, but depends on browser support. Valid
    values are:
    
     - 2 opens a new tab,
     - 1 opens a new window,
     - 0 opens in an existing window.
    
    See the `webbrowser.open` documentation for details.


ServerApp.websocket_compression_options : Any
    Default: ``None``

    
    Set the tornado compression options for websocket connections.
    
    This value will be returned from :meth:`WebSocketHandler.get_compression_options`.
    None (default) will disable compression.
    A dict (even an empty one) will enable compression.
    
    See the tornado docs for WebSocketHandler.get_compression_options for details.


ServerApp.websocket_url : Unicode
    Default: ``''``

    The base URL for websockets,
    if it differs from the HTTP server (hint: it almost certainly doesn't).
    
    Should be in the form of an HTTP origin: ws[s]://hostname[:port]

